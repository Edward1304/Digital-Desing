#include "state_machine.h"

state_machine_enum state_machine;
extern flag_enum button_flag;

void initialize_state_machine(void){
	state_machine = s0;
}

void check_state_machine(void){
	switch(state_machine){
		case s0:
			s0_state_function();
			break;
		case s1:
			s1_state_function();
			break;
		case s2:
			s2_state_function();
			break;
		default:
			break;
	}
}

void s0_state_function(void){
	HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
	HAL_Delay(1000);
	if(button_flag = FLAG_SET){
		state_machine=s1;
		HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
		button_flag = FLAG_RELEASED;
	}

}

void s1_state_function(void){
	HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
	HAL_Delay(2000);
	if(button_flag = FLAG_SET){
			state_machine=s2;
			HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
			button_flag = FLAG_RELEASED;
		}
}

void s2_state_function(void){
	HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
	HAL_Delay(3000);
	if(button_flag = FLAG_SET){
			state_machine=s0;
			HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
			button_flag = FLAG_RELEASED;
		}
}
