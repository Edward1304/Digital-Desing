#include "state_machine.h"

uint8_t counter_switch=0;
state_machine_enum state_machine;
extern flag_enum button_flag;
extern flag_enum timer_switch_flag;
extern flag_enum timer_indicator_flag;

void initialize_state_machine(void){
	state_machine = s0;
}

void check_state_machine(void){
	switch(state_machine){
		case s0:
			s0_state_function();
			break;
		case s1:
			s1_state_function();
			break;
		default:
			break;
	}
}

void s0_state_function(void){
	if(timer_switch_flag==FLAG_SET){
		timer_switch_flag=FLAG_RELEASED;
		HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
		counter_switch++;
		if(counter_switch>=5){
			state_machine=s1;
			htim3.Init.Period = 6000-1;
			HAL_TIM_Base_Init(&htim3);
			counter_switch=0;
		}
	}else{

	}
//	HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
//	HAL_Delay(1000);
//	if(button_flag == FLAG_SET){
//		button_flag = FLAG_RELEASED;
//
//		HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
//}

}

void s1_state_function(void){
	if(timer_switch_flag==FLAG_SET){
			timer_switch_flag=FLAG_RELEASED;
			HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
			counter_switch++;
			if(counter_switch>=5){
				state_machine=s0;
				htim3.Init.Period = 20000-1;
				HAL_TIM_Base_Init(&htim3);
				counter_switch=0;
			}
		}else{

		}
//	HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
//	HAL_Delay(2000);
//	if(button_flag == FLAG_SET){
//		button_flag = FLAG_RELEASED;
//		state_machine=s2;
//			HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
//
//		}
}


